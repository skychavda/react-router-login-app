{"version":3,"sources":["component/home.jsx","component/signup.jsx","component/login.jsx","component/router.jsx","serviceWorker.js","index.js"],"names":["Home","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","React","Component","Signup","props","_this","call","state","fname","lname","password","email","formValidate","isLoggin","isSignup","handleChange","bind","assertThisInitialized","validate","handleLoggin","setState","e","defineProperty","target","name","console","log","loggin","htmlFor","type","id","onChange","onClick","Login","authValidate","isLoggedIn","logout","Routers","BrowserRouter","Link","to","Route","exact","path","component","home","login","signup","defaultProps","home_Home","login_Login","signup_Signup","Boolean","window","location","hostname","match","ReactDOM","render","router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a2ad863a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport class Home extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"text-center\">\r\n                <h1>Welcome</h1>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {Login} from './login';\r\n\r\nexport class Signup extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            fname: '',\r\n            lname: '',\r\n            password: '',\r\n            email: '',\r\n            formValidate: false,\r\n            isLoggin: false,\r\n            isSignup: false\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.validate = this.validate.bind(this);\r\n        this.handleLoggin = this.handleLoggin.bind(this);\r\n    }\r\n\r\n    handleLoggin(props){\r\n        this.setState({isLoggin: props.handleLoggin});\r\n    }\r\n\r\n    handleChange(e){\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        });\r\n    }\r\n\r\n    validate(){\r\n        let fname = this.state.fname;\r\n        let lname = this.state.lname;\r\n        let password = this.state.password;\r\n        let email = this.state.email;\r\n        if(fname!==''&&lname!==''&&password!==''&&email!==''){\r\n            this.setState({formValidate: true,\r\n                isSignup: true});\r\n        }else{\r\n            this.setState({formValidate: false,\r\n            isSignup: false});\r\n        }\r\n    }\r\n    render(){\r\n        console.log(this.state.formValidate);\r\n        console.log(\"login var from login.jsx\", this.props.loggin);\r\n        return(\r\n            (!this.state.formValidate && !this.props.loggin)?(\r\n            <div>\r\n                    <div className=\"formGroup row\">\r\n                       <div className=\"input-label\"><label htmlFor=\"fname\">First Name:</label></div>\r\n                        <div className=\"form-input-div\"><input type=\"text\" id=\"fname\" name=\"fname\" className=\"form-control\" onChange={this.handleChange}/></div>\r\n                    </div>\r\n                    <div className=\"formGroup row\">\r\n                        <div className=\"input-label\"><label htmlFor=\"lname\">Last Name:</label></div>\r\n                        <div className=\"form-input-div\"><input type=\"text\" id=\"lname\" name=\"lname\" className=\"form-control\" onChange={this.handleChange}/></div>\r\n                    </div>\r\n                    <div className=\"formGroup row\">\r\n                        <div className=\"input-label\"><label htmlFor=\"email\">Email:</label></div>\r\n                        <div className=\"form-input-div\"><input type=\"email\" id=\"email\" name=\"email\" className=\"form-control\" onChange={this.handleChange}/></div>\r\n                    </div>\r\n                    <div className=\"formGroup row\">\r\n                        <div className=\"input-label\"><label htmlFor=\"password\">Password: </label></div>\r\n                        <div className=\"form-input-div\"><input type=\"password\" id=\"password\" name=\"password\" className=\"form-control\" onChange={this.handleChange}/></div>\r\n                    </div>\r\n                    <input type=\"button\" className=\"btn\" value=\"Signup\" onClick={this.validate}/>\r\n                    {/* <IsSignin value={false}/> */}\r\n                    \r\n            </div>\r\n            ):(\r\n                <div>\r\n                    Signup successfull!\r\n                    {/* <Login isSignup={this.state.isSignup}/> */}\r\n                </div>\r\n            )\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {Signup} from './signup';\r\nimport Routers from './router';\r\n\r\nexport function IsSignin(props){\r\n        if(props.value){\r\n            return <h1>hii</h1>;\r\n        }   \r\n    \r\n}\r\nexport class Login extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            email: '',\r\n            password: '',\r\n            authValidate: false,\r\n            isLoggedIn: false\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.validate = this.validate.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n    }\r\n\r\n    handleChange(e){\r\n        this.setState({[e.target.name]:e.target.value});\r\n    }\r\n\r\n    validate(){\r\n        const email = this.state.email;\r\n        const password = this.state.password;\r\n        if(email !== '' && password !== ''){\r\n            this.setState({authValidate: true,\r\n            isLoggedIn: true\r\n            });\r\n            // Signup.handleLoggin();\r\n        }\r\n        // else{\r\n        //     this.setState({authValidate: false,\r\n        //     isLoggedIn: false});\r\n        // }\r\n    }\r\n\r\n    logout(){\r\n        this.setState({authValidate: false,isLoggedIn:false});\r\n    }\r\n\r\n    render(){\r\n            console.log(\"authValidate\", this.state.authValidate);\r\n            console.log(\"login\",this.state.isLoggedIn);\r\n        return(\r\n        (!this.state.authValidate)?(\r\n                <div>\r\n                    <div className=\"formGroup row\">\r\n                        <div className=\"input-label\"><label htmlFor=\"email\">Email:</label></div>\r\n                        <div className=\"form-input-div\"><input type=\"email\" id=\"email\" name=\"email\" className=\"form-control\" onChange={this.handleChange}/></div>\r\n                    </div>\r\n                    <div className=\"formGroup row\">\r\n                        <div className=\"input-label\"><label htmlFor=\"password\">Password: </label></div>\r\n                        <div className=\"form-input-div\"><input type=\"password\" id=\"password\" name=\"password\" className=\"form-control\" onChange={this.handleChange}/></div>\r\n                    </div>\r\n                    <input type=\"button\" className=\"btn\" value=\"Login\" onClick={this.validate}/>\r\n                    \r\n                </div>\r\n            ):(\r\n                <div>\r\n                    <div>sfdsfdsfdsf</div>\r\n                    <button onClick={this.logout}>Logout</button>\r\n                    {/* <Routers handleLoggin={this.state.isLoggedIn}/> */}\r\n                </div>\r\n            ));\r\n        }\r\n    }\r\n","import React from 'react';\r\nimport {BrowserRouter as Router, Route, Link} from \"react-router-dom\";\r\nimport {Home} from './home';\r\nimport {Login} from './login';\r\nimport {Signup} from './signup';\r\n\r\n// export function RouterExample(){\r\n//     return(\r\n//         <Router>\r\n//             <div className=\"container\">\r\n//                 <ul>\r\n//                     <li><Link to=\"/\">Home</Link></li>\r\n//                     <li><Link to=\"/login\">Login</Link></li>\r\n//                     <li><Link to=\"/signup\">Signup</Link></li>\r\n//                 </ul>\r\n//                 <hr/>\r\n//                 <Route exact path=\"/\" component={home}/>\r\n//                 <Route path=\"/login\"  component={login}/>\r\n//                 <Route path=\"/signup\" component={signup}/>\r\n//             </div>\r\n//         </Router>\r\n//     );\r\n// }\r\n\r\nclass Routers extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={isLoggedIn: props.handleLoggin};\r\n    }\r\n\r\n    render(){\r\n        const {isLoggedIn} = this.state;\r\n        console.log(\"router login\", this.state.isLoggedIn);\r\n        return(\r\n            <Router>\r\n            <div className=\"container\">\r\n                <ul>\r\n                    <li><Link to=\"/\">Home</Link></li>\r\n                    <li><Link to=\"/login\">Login</Link></li>\r\n                    {!isLoggedIn && <li><Link to=\"/signup\">Signup</Link></li>}\r\n                </ul>\r\n                <hr/>\r\n                <Route exact path=\"/\" component={home}/>\r\n                <Route path=\"/login\"  component={login}/>\r\n                <Route path=\"/signup\" component={signup}/>\r\n            </div>\r\n        </Router>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nRouters.defaultProps={\r\n    handleLoggin: false\r\n}\r\n\r\nexport default Routers;\r\n\r\nfunction home(){\r\n    return(\r\n        <Home />\r\n    );\r\n}\r\n\r\nfunction login(){\r\n    return(\r\n        <Login />\r\n    );\r\n}\r\n\r\nfunction signup(){\r\n    return(\r\n        <Signup />\r\n    );\r\n}\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routers from './component/router';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<Routers />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}